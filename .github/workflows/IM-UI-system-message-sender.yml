name: IM-UI-System Message-Sender CI&CD

on:
  push:
    branches: [ "develop-IM-UI-system-message-sender","release-IM-UI-system-message-sender" ]
env:
  PROJECT_NAME: "graduation-project"
  SUB_SYSTEM_NAME: "im-ui-system"
  SERVICE_NAME: "message-sender"
  LINE_BOT_TOKEN: ${{ secrets.LINE_BOT_TOKEN }}
  LINE_BOT_SECRET: ${{ secrets.LINE_BOT_SECRET }}
  RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
  RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
  RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
  RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
  LOGIN_TRACKER_URL: ${{ secrets.LOGIN_TRACKER_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Test with Maven
      run: |
        cd $SERVICE_NAME
        mvn -B test --file pom.xml
        
    - name: Build with Maven
      if: startsWith(github.ref, 'refs/heads/release')
      run: |  
        cd $SERVICE_NAME
        mvn -B clean package --file pom.xml -Dmaven.test.skip
      
    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/heads/release')
      shell: bash
      run: |
        cd $SERVICE_NAME
        docker build -t ${PROJECT_NAME}_${SUB_SYSTEM_NAME}_${SERVICE_NAME}:latest .
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag ${PROJECT_NAME}_${SUB_SYSTEM_NAME}_${SERVICE_NAME} tairitsu86/${PROJECT_NAME}_${SUB_SYSTEM_NAME}_${SERVICE_NAME}
        docker push tairitsu86/${PROJECT_NAME}_${SUB_SYSTEM_NAME}_${SERVICE_NAME}:latest
