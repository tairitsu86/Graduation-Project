name: Deploy to GKE

on:
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: asia-east1
  DEPLOYMENT_NAME: user-database
  REPOSITORY: tairitsu86
  IMAGE: graduation-project_login-system_user-database

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    env:
      USER_DATABASE_IP_PORT: ${{ secrets.USER_DATABASE_IP_PORT }}
      USER_DATABASE_DATABASENAME: ${{ secrets.USER_DATABASE_DATABASENAME }}
      USER_DATABASE_USERNAME: ${{ secrets.USER_DATABASE_USERNAME }}
      USER_DATABASE_PASSWORD: ${{ secrets.USER_DATABASE_PASSWORD }}
    defaults:
      run:
        working-directory: ./user-database

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    
    # JAVA Build
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
      
    # Build the Docker image
    - name: Build image
      run: |-
        docker build \
          --tag "$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
          
    # Push Docker image
    - name: Push image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      shell: bash
      run: |
        docker build -t graduation-project_login-system_user-database:latest .
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push "$REPOSITORY/$IMAGE:$GITHUB_SHA"
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        cd ..
        ./kustomize edit set image REPOSITORY/IMAGE:TAG:TAG=$REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
